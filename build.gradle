import org.apache.tools.ant.taskdefs.condition.Os

repositories {
	mavenCentral()
	maven { url "https://mini2dx.org/maven/content/repositories/thirdparty" }
}

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'

sourceCompatibility = 1.7
targetCompatibility = 1.7

group = 'org.mini2Dx'
version = '1.0.7-SNAPSHOT'

configurations { includeInJar }

dependencies {
	compile gradleApi()
	compile localGroovy()
	compile "net.java:appbundler:1.0"
	compile "com.github.spullara.mustache.java:compiler:0.8.17"

	testCompile 'junit:junit:4.11'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

if (Os.isFamily(Os.FAMILY_WINDOWS)) {
	task buildExe(type:Exec) {
		workingDir 'natives/windows'
	
		commandLine 'cmd', '/c', 'MSBuild', 'parcl.sln', '/p:Configuration=Release', '/t:rebuild'
	}
	
	task copyExeToJar(type: Copy, dependsOn: buildExe) {
		from 'natives/windows/bin/Release'
		include '*.exe'
		include '*.pdb'
		into 'src/main/resources'
	}
	
	assemble.dependsOn copyExeToJar
}

jar {

}

task sourceJar(type: Jar) {
	from sourceSets.main.allJava
}

publishing {
	repositories {
		maven {
			url "https://mini2dx.org/maven/content/repositories/releases"
			if(project.hasProperty('mini2DxMavenUser')) {
				credentials {
					username = project.property('mini2DxMavenUser')
					password = project.property('mini2DxMavenPassword')
				}
			}
		}
	}
	publications {
		maven(MavenPublication) {
			from components.java
			
			artifact sourceJar {
				classifier "sources"
			}
		}
	}
}